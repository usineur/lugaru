cmake_minimum_required(VERSION 3.0)

if( NOT DEFINED CMAKE_TOOLCHAIN_FILE )
  set(CMAKE_TOOLCHAIN_FILE "Toolchain.cmake" CACHE PATH "Toolchain file")
endif()

project(lugaru)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -g")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2 -g")

add_definitions(-DBinIO_STDINT_HEADER=<stdint.h> -D__SWITCH__)

link_directories(
  ${DEVKITPRO}/libnx/lib
  ${DEVKITPRO}/portlibs/switch/lib
)

include_directories(
  ${DEVKITPRO}/portlibs/switch/include/SDL2
  ${CMAKE_SOURCE_DIR}/Source
  ${CMAKE_SOURCE_DIR}/Source/Animation
  ${CMAKE_SOURCE_DIR}/Source/Audio
  ${CMAKE_SOURCE_DIR}/Source/Devtools
  ${CMAKE_SOURCE_DIR}/Source/Environment
  ${CMAKE_SOURCE_DIR}/Source/Graphic
  ${CMAKE_SOURCE_DIR}/Source/Level
  ${CMAKE_SOURCE_DIR}/Source/Math
  ${CMAKE_SOURCE_DIR}/Source/Menu
  ${CMAKE_SOURCE_DIR}/Source/Objects
  ${CMAKE_SOURCE_DIR}/Source/Platform
  ${CMAKE_SOURCE_DIR}/Source/Thirdparty
  ${CMAKE_SOURCE_DIR}/Source/User
  ${CMAKE_SOURCE_DIR}/Source/Utils
)

link_directories(
  ${DEVKITPRO}/libnx/lib
  ${DEVKITPRO}/portlibs/switch/lib
)

# Builds
file(GLOB_RECURSE SRCS Source/*.cpp Source/*.c)
add_executable(${CMAKE_PROJECT_NAME}.elf
  ${SRCS}
)

target_link_libraries(${CMAKE_PROJECT_NAME}.elf
  openal
  SDL2
  EGL
  glapi
  drm_nouveau
  jsoncpp
  jpeg
  png
  vorbisfile
  vorbis
  ogg
  z
  nx
  -specs=${DEVKITPRO}/libnx/switch.specs
)

add_custom_target(${CMAKE_PROJECT_NAME}.nro
  DEPENDS ${CMAKE_PROJECT_NAME}.elf
  COMMAND nacptool --create "Lugaru" "usineur" "1.3" ${CMAKE_PROJECT_NAME}.nacp
  COMMAND elf2nro ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.nro --icon=${CMAKE_SOURCE_DIR}/icon.jpg --nacp=${CMAKE_PROJECT_NAME}.nacp
)

add_custom_target(send
  COMMAND curl -T ${CMAKE_PROJECT_NAME}.nro ftp://$(SWITCHIP):5000/switch/${CMAKE_PROJECT_NAME}/
  DEPENDS ${CMAKE_PROJECT_NAME}.nro
)

add_custom_target(nxlink
  COMMAND nxlink -a $(SWITCHIP) ${CMAKE_PROJECT_NAME}.nro -s -p ${CMAKE_PROJECT_NAME}/${CMAKE_PROJECT_NAME}.nro
  DEPENDS ${CMAKE_PROJECT_NAME}.nro
)
